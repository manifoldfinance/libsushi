"use strict";var j=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports);var Tr=j(e=>{Object.defineProperty(e,"__esModule",{value:!0});var E=require("@reduxjs/toolkit"),U=require("@ethersproject/strings"),N=(r=>(r.MAINNET="1",r.OPENMEV="73300705280",r.GORELI="5",r))(N||{});let k=["1"];var f=(r=>(r.MAINNET="0x1",r))(f||{});const K=["0x1"],F=r=>"https://api.sushirelay.com/v1",V=F(),A=E.createAction("transactions/addTransaction"),g=E.createAction("transactions/clearAllTransactions"),C=E.createAction("transactions/finalizeTransaction"),x=E.createAction("transactions/checkedTransaction"),v=E.createAction("transactions/updatePrivateTxStatus");var i=(r=>(r.UNCHECKED="UNCHECKED",r.PROCESSING="PROCESSING",r.OK="OK",r.INDETERMINATE="INDETERMINATE",r.ERROR="ERROR",r))(i||{});function O(r){throw new Error("[#sushiguard]: Function Error.")}var L=Object.freeze({__proto__:null,PrivateTxState:i,privateTx:O});/**
 *
 * @class PrivateTransaction
 * @license GPL-3.0-Only
 * @see {@link https://docs.manifoldfinance.com}
 * @since 2022.03
 * @latest 2022.06
 * @version 0.2.0
 *
 */function H(r){return r?.privateTx?r?.privateTx?.state===i.UNCHECKED||r?.privateTx?.state===i.PROCESSING:!r?.receipt}function J(r){return r?.privateTx?r?.privateTx?.state===i.OK&&!!r&&(r.receipt?.status===1||typeof r.receipt?.status>"u"):!!r&&(r.receipt?.status===1||typeof r.receipt?.status>"u")}function q(r){return r?.privateTx?r?.privateTx?.state===i.INDETERMINATE:!1}function p(r){return r?(new Date().getTime()-r.addedTime)/1e3/60:0}function G(r){return r?p(r)>60:!1}const m=()=>new Date().getTime(),I={};var B=E.createReducer(I,r=>r.addCase(A,(t,{payload:{chainId:o,from:n,hash:s,approval:a,summary:c,claim:l,privateTx:d=!1}})=>{if(t[o]?.[s])throw Error("Attempted to add existing transaction.");const u=t[o]??{};u[s]={hash:s,approval:a,summary:c,claim:l,from:n,addedTime:m(),...d?{privateTx:{state:i.UNCHECKED,status:void 0}}:{}},t[o]=u}).addCase(g,(t,{payload:{chainId:o}})=>{!t[o]||(t[o]={})}).addCase(x,(t,{payload:{chainId:o,hash:n,blockNumber:s}})=>{const a=t[o]?.[n];!a||(a.lastCheckedBlockNumber?a.lastCheckedBlockNumber=Math.max(s,a.lastCheckedBlockNumber):a.lastCheckedBlockNumber=s)}).addCase(C,(t,{payload:{hash:o,chainId:n,receipt:s}})=>{const a=t[n]?.[o];!a||(a.receipt=s,a.confirmedTime=m())}).addCase(v,(t,{payload:{chainId:o,hash:n,status:s}})=>{const a=t[o]?.[n];if(!a)return;if(!a.privateTx)throw new Error("Invalid update private tx call to a non private tx");const c=a.privateTx?.state;a.privateTx?.status;const l=p(a);if(c&&(c===i.ERROR||c===i.INDETERMINATE||c===i.OK))return;let d=i.PROCESSING;s.receivedAt&&s.relayedAt&&!s.relayFailure&&s.minedAt&&(d=i.OK),s.receivedAt&&s.relayFailure&&s.relayResponses&&Object.values(s.relayResponses).reduceRight((u,T)=>u||!!(T.error||T.response.error),!1)&&(d=i.ERROR),s.receivedAt&&s.relayedAt&&s.relayFailure&&s.minedAt&&(d=i.INDETERMINATE),l>3&&(d=i.INDETERMINATE),a.privateTx.state=d??i.UNCHECKED,a.privateTx.status=s})),W=Object.freeze({__proto__:null,default:B,initialState:I});class S extends Error{constructor(t,o,n){super(t),this.req=o,this.res=n}}function z(r,{jsonrpc:t="2.0",id:o=new Date().getTime(),method:n="",params:s=[]}){return fetch(r,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify({jsonrpc:t,id:o,method:n,params:s})}).then(a=>{if(a.status!==200)throw new S(a.statusText,{jsonrpc:t,id:o,method:n,params:s},a);return a.json()})}function Q(r){if(r.jsonrpc!=="2.0"||typeof r.id!="string"&&typeof r.id!="number"&&r.id!==null||"result"in r&&"error"in r||!("result"in r)&&!("error"in r)||r.error&&typeof r.error.code!="number"||r.error&&typeof r.error.message!="string")throw new Error(`Expected JSON-RPC response, received something else.
${JSON.stringify(r)}`);return!0}function X(r){return!!r.result&&!r.error}function Z(r){return!!r.error&&!r.result}const Y="0x000000000000000000000000000000000000dead",rr="0x0000000000000000000000000000000000000000",er="",tr="0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000";class R extends Error{constructor(t,o,n,s){if(!Number.isInteger(t))throw new Error('"code" must be an integer.');if(!o||typeof o!="string")throw new Error('"message" must be a nonempty string.');super(o),this.code=t,this.data=s,this.internal=n}}class h extends R{constructor(t,o,n,s){if(!(Number.isInteger(t)&&t>=1e3&&t<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,o,n,s)}}class sr extends Error{constructor(){super(...arguments),this.name="AddChainError",this.message="Error adding chain"}}class ar extends Error{constructor(){super(...arguments),this.name="ChainNotConfigured",this.message="Chain not configured"}}class or extends Error{constructor(){super(...arguments),this.name="ConnectorAlreadyConnectedError",this.message="Connector already connected"}}class nr extends Error{constructor(){super(...arguments),this.name="ConnectorNotFoundError",this.message="Connector not found"}}class ir extends h{constructor(t){super(4902,"Error switching chain",t),this.name="SwitchChainError"}}class cr extends Error{constructor(){super(...arguments),this.name="SwitchChainNotSupportedError",this.message="Switch chain not supported by connector"}}class dr extends h{constructor(t){super(4001,"User rejected request",t),this.name="UserRejectedRequestError"}}class Er extends R{constructor(t){super(-32002,"Resource unavailable",t),this.name="ResourceUnavailable"}}function _(r,t){return r&&r.code===t}function ur(r){return _(r,"CALL_EXCEPTION")}const lr=async(r,t,o)=>{if(typeof r!="object")throw TypeError(`tx argument ${r} must be a transaction object`);if(typeof t!="object")throw TypeError(`receipt argument ${t} must be a transaction receipt object`);if(t.status)throw TypeError("Transaction did not fail. Can only read the revert reason from failed transactions");if(!t.transactionHash)throw TypeError("There is no transaction hash on the receipt object");if(t.gasUsed===r.gasLimit)throw Error("Transaction failed as it ran out of gas.");let n;try{n=(await o.call({...r},t.blockNumber)).slice(2)}catch(s){if(s.message.startsWith("Node error: ")){const a=s.message.slice(12),c=JSON.parse(a);if(!c.data)throw Error("Failed to parse data field error object:"+a);if(c.data.startsWith("Reverted 0x"))n=c.data.slice(11);else if(c.data.startsWith("0x"))n=c.data.slice(2);else throw Error("Failed to parse data field of error object:"+a)}else throw Error("Failed to parse error message from Ethereum call: "+s.message)}return D(n)},D=r=>{const t=parseInt(r.slice(72,136),16),o=r.slice(8+128,8+128+t*2);return U.toUtf8String("0x"+o)},y="PARSE_ERROR",P="INVALID_REQUEST",b="METHOD_NOT_FOUND",w="INVALID_PARAMS",$="INTERNAL_ERROR",M="SERVER_ERROR",pr=[-32700,-32600,-32601,-32602,-32603],Rr=[-32e3,-32099],hr={[y]:{code:-32700,message:"Parse error"},[P]:{code:-32600,message:"Invalid Request"},[b]:{code:-32601,message:"Method not found"},[w]:{code:-32602,message:"Invalid params"},[$]:{code:-32603,message:"Internal error"},[M]:{code:-32e3,message:"Server error"}};e.AddChainError=sr;e.AddressZero=rr;e.BURN_ADDRESS=Y;e.ChainId=N;e.ChainNotConfiguredError=ar;e.ConnectorAlreadyConnectedError=or;e.ConnectorNotFoundError=nr;e.DeadAddress=tr;e.EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA=er;e.HttpJsonRpcError=S;e.INTERNAL_ERROR=$;e.INVALID_PARAMS=w;e.INVALID_REQUEST=P;e.MAINNET_RPC_URL=V;e.METHOD_NOT_FOUND=b;e.OPENMEV_METAMASK_CHAIN_ID=f;e.OPENMEV_METAMASK_SUPPORTED_NETWORKS=K;e.OPENMEV_SUPPORTED_NETWORKS=k;e.PARSE_ERROR=y;e.PrivateTransaction=L;e.PrivateTxState=i;e.ProviderRpcError=h;e.RESERVED_ERROR_CODES=pr;e.Reducer=W;e.ResourceUnavailableError=Er;e.RpcError=R;e.SERVER_ERROR=M;e.SERVER_ERROR_CODE_RANGE=Rr;e.STANDARD_ERROR_MAP=hr;e.SwitchChainError=ir;e.SwitchChainNotSupportedError=cr;e.UserRejectedRequestError=dr;e.addTransaction=A;e.checkedTransaction=x;e.clearAllTransactions=g;e.fetchJsonRpc=z;e.finalizeTransaction=C;e.getTransactionError=lr;e.isCallException=ur;e.isError=_;e.isJsonRpcError=Z;e.isJsonRpcSuccess=X;e.isTxExpired=G;e.isTxIndeterminate=q;e.isTxPending=H;e.isTxSuccessful=J;e.parseReasonCode=D;e.privateTx=O;e.txMinutesPending=p;e.updatePrivateTxStatus=v;e.validateJsonRpcResponse=Q});export default Tr();
//# sourceMappingURL=index.cjs.map
